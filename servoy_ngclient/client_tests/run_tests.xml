<?xml version="1.0" encoding="UTF-8"?>
<project default="run_tests">
	<property name="basedir" value="."/>
	<property name="tsc" value="tsc"/>
	
	<property name="karma_run_once.conf" value="./karma.conf.js"/>
	<property name="karma_run_on_file_change.conf" value="./karma_run_on_file_change.conf.js"/>
	
	<property file="./development_mode.properties" /> <!-- if the file is present karma will run in continuous mode for development when run_tests is ran -->
	<property name="karma.conf" value="${karma_run_once.conf}"/>
	<property file="run_tests_personal.properties"/>
	<property name="sablo_location" value="../../sablo"/>

	<target name="typescript_transpiling">
		<echo message="Transpiling ${project}"/>
		<exec executable="${tsc}" failonerror="true" searchpath="true" resolveexecutable="true" osfamily="unix">
		   <arg line="-p ${project}" />
		</exec>		
		<exec executable="${tsc}.cmd" failonerror="true" searchpath="true" resolveexecutable="true" osfamily="windows">
		   <arg line="-p ${project}" />
		</exec>		
	</target>
	
	<!-- checks if used dependencies from package.json are outdated should be used manualy from time to time--> 
	<target name="check_outdated">
		<exec executable="bash" dir="${basedir}" osfamily="unix"
					failonerror="true">
					<arg value="-c"/>
					<arg value="npm outdated"/>
		</exec>
		<exec executable="cmd" dir="${basedir}" osfamily="windows"
					failonerror="true">
					<arg value="/c" />
					<arg value="npm"/>
					<arg value="outdated"/>
		</exec>
	</target>
	
	 <!-- used to run install karma only once -->
	 <target name="karma_installed_check" >
	    <condition property="karma.installed">
	      <available file="./node_modules" type="dir"/>
	    </condition>
	 </target>
	
	 <target name="install_karma_if_necessary" depends="karma_installed_check" unless="karma.installed">
	 	 <antcall target="install_karma"/>
	 </target>
	
	
	<!-- installs karma with it's dependencies  based on package.json file  run only once-->
	<target name="install_karma">
		<exec executable="cmd" dir="${basedir}" osfamily="windows"
			failonerror="true">
			<arg line="/c npm config set color false" />
		</exec>
		<exec executable="bash" dir="${basedir}" osfamily="unix"
			failonerror="true">
			<arg value="-c" />
			<arg value="npm config set color false"/>
		</exec>

		<exec executable="cmd" dir="${basedir}" osfamily="windows"
			failonerror="true">
			<arg line="/c npm install" />
		</exec>
		<exec executable="bash" dir="${basedir}" osfamily="unix"
			failonerror="true">
			<arg line="-c" />
			<arg value="npm install"/>
		</exec>
	</target>
	
	<target name="run_tests" depends="install_karma_if_necessary">
		<!-- do TypeScript transpiling of sablo -->
		<antcall target="typescript_transpiling">
			<param name="project" value="${sablo_location}"/>
		</antcall>
		<!-- do TypeScript transpiling of servoy_ngclient -->
		<antcall target="typescript_transpiling">
			<param name="project" value=".."/>
		</antcall>
		
		<exec executable="cmd" dir="${basedir}" osfamily="windows"
					failonerror="true">
					<arg value="/c"/>
					<arg value="node"/>
					<arg value="./node_modules/karma/bin/karma"/>
					<arg value="start"/>
					<arg value="${karma.conf}"/>
		</exec>
		<property name="temp1" value="node ./node_modules/karma/bin/karma start ${karma.conf}"/>
		<exec executable="bash" dir="${basedir}" osfamily="unix"
							failonerror="true">
			                <arg value="-c"/>
							<arg value="${temp1}"/>
		</exec>
	</target>

</project>